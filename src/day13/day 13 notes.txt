  x
y	

X 1 2 X 
1 X X   
----------
2   X
3     X


4 * 4
======
fold na 1
2

1+0,5 - ( (2 - (1+0,5) ))    =   1+0,5  - 2 + 1+0,5 =     2xfold + 1 - y  

2x1 + 1 - 2 = 1

3
2*1 + 1 - 3 = 0



3*3 fold na 1
X 




(0,0) (0, 3) (1, 1) (1,2) (2, 2) (3, 3)

y 0 => 0
y 1 => 1

l.y = 4 


Y  length = 4 fold after 1/2*l.y  index = 1 

X 1 2 X 4 
1 X	X  	
2   
3     

(0,0) (1, 1) (2, 1) (3, 0)
x unchanged y => 


algorithm
if y >= (1/2*l.y-1)   then y
else (1/2*l.y) - (y -(1/2*y-1))

2 => 2 - (2-1) = 1
3 => 2 - (3-1) = 0

x idem

steps
make grid with cells
all cells with y > 1/2*l.y-1
add value to cell with new y coordinate
clear value of original cell
count cells with value

(remove unused grid) ?



  const halfLY = (yMax + 1) / 2;
  const foldY = halfLY - 1;
  
  
  //const halfLY = 6;
  //const foldY = 7;
  // wrong with 4 x 4 array must be - (desiredFold + 1)
  // ok with X x 15 array must be - (desiredFold + 1)